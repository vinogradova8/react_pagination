{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","useState","prevLinkDisabled","setPrevLinkDisabled","nextLinkDisabled","setNextLinkDisabled","numberOfPages","useMemo","Math","ceil","allPages","useEffect","className","cn","disabled","href","onClick","onKeyDown","event","key","preventDefault","map","pageNumber","active","App","setPerPage","setCurrentPage","items","length","slice","id","value","onChange","e","target","htmlFor","page","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71e0fc11.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = (\n  {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  },\n) => {\n  const [prevLinkDisabled, setPrevLinkDisabled] = useState(true);\n  const [nextLinkDisabled, setNextLinkDisabled] = useState(false);\n\n  const numberOfPages = useMemo(() => {\n    return Math.ceil(total / perPage);\n  }, [perPage]);\n\n  const allPages = useMemo(() => {\n    return getNumbers(1, numberOfPages);\n  }, [numberOfPages]);\n\n  useEffect(() => {\n    if (currentPage !== 1) {\n      setPrevLinkDisabled(false);\n    }\n\n    if (currentPage === 1) {\n      setPrevLinkDisabled(true);\n    }\n\n    if (currentPage === numberOfPages) {\n      setNextLinkDisabled(true);\n    }\n  }, [currentPage, numberOfPages]);\n\n  function handlePrevLinkClick() {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  }\n\n  function handleNextLinkClick() {\n    if (currentPage !== numberOfPages) {\n      onPageChange(currentPage + 1);\n    }\n  }\n\n  function handlePrevLinkKeyDown(event:\n  React.KeyboardEvent<HTMLAnchorElement>) {\n    if (event.key === 'Enter' && currentPage === 1) {\n      event.preventDefault();\n    }\n  }\n\n  function handleNextLinkKeyDown(event:\n  React.KeyboardEvent<HTMLAnchorElement>) {\n    if (event.key === 'Enter' && currentPage === numberOfPages) {\n      event.preventDefault();\n    }\n  }\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={cn('page-item', {\n            disabled: currentPage === 1,\n          })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={prevLinkDisabled}\n            onClick={handlePrevLinkClick}\n            onKeyDown={handlePrevLinkKeyDown}\n          >\n            «\n          </a>\n        </li>\n        {allPages.map(pageNumber => (\n          <li\n            className={cn('page-item', {\n              active: pageNumber === currentPage,\n            })}\n            key={pageNumber}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${pageNumber}`}\n              onClick={() => onPageChange(pageNumber)}\n            >\n              {pageNumber}\n            </a>\n          </li>\n        ))}\n        <li\n          className={cn('page-item', {\n            disabled: numberOfPages === currentPage,\n          })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={nextLinkDisabled}\n            onClick={handleNextLinkClick}\n            onKeyDown={handleNextLinkKeyDown}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst total = 42;\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const numberOfPages = Math.ceil(total / perPage);\n\n  const allPages = getNumbers(1, numberOfPages);\n\n  let items: string[] = [];\n\n  if (allPages.length !== currentPage) {\n    switch (currentPage) {\n      case 1:\n        items = getNumbers(1, perPage)\n          .map(n => `Item ${n}`);\n\n        break;\n\n      case 2:\n      case 3:\n      case 4:\n      case 5:\n      case 6:\n      case 7:\n      case 8:\n      case 9:\n      case 10:\n      case 11:\n      case 12:\n      case 13:\n      case 14:\n        items = getNumbers(perPage * (currentPage - 1) + 1, perPage\n        * currentPage)\n          .map(n => `Item ${n}`);\n\n        break;\n\n      default: break;\n    }\n  }\n\n  if (allPages.length === currentPage) {\n    items = getNumbers(perPage * (currentPage - 1) + 1, 42)\n      .map(n => `Item ${n}`);\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${perPage * (currentPage - 1) + 1} - ${items[items.length - 1].slice(5)} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(e) => {\n              setPerPage(+e.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={total} // total number of items to paginate\n        perPage={perPage} // number of items per page\n        currentPage={currentPage} /* optional with 1 by default */\n        onPageChange={(page) => {\n          setCurrentPage(page);\n        }}\n      />\n      <ul>\n        {\n          items.map(item => (\n            <li data-cy=\"item\">{item}</li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}